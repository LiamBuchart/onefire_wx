import subprocess
import pathlib
from pathlib import Path
import os
import geopandas as gpd

# use wget to download the file
extensions = [".shp", ".shx", ".dbf", ".prj"]
link = "https://cwfis.cfs.nrcan.gc.ca/downloads/hotspots/perimeters"
json_file = "all_perimeters.json"
json_dir = "/static/data/"

cwd = Path.cwd()
parent = cwd.parent

def execute_command(command):

    """
    Execute a CLI command and return the output and error messages.
    Parameters:
    -  command [str]: The CLI command to execute.

    Returns:
    - output (str): The output generated by the command. 
                    A zip file containing the NFDB fire polygons (for large fires)
    - error (str): The error message generated by the command, if any.

    """

    try:

        # execute the command and capture the output and error messages

        process = subprocess.Popen(command, shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
        output, error = process.communicate()

        output = output.decode("utf-8")
        error = error.decode("utf-8")

        # return the output and error messages
        return output, error

    except Exception as e:

        # if an exception occurs, return the exception message as an error
        return None, str(e)
    
# check to see if the shapefile already exists
if os.path.exists("perimeters.shp"):
    # delete the shapefile if it exists
    print("Shapefile already exists. Downloading the latest data...")
    for ext in extensions:
        os.remove(f"perimeters{ext}")   
        
# remove the geojson from static/data
if os.path.exists(str(parent) + json_dir + json_file):
    json_path = Path(parent, json_dir, json_file)
    pathlib.Path.unlink(str(parent) + json_path + json_file)
 
print("Executing command to download NFDB fire polygons...")

# Download the NFDB fire polygons using wget
for ext in extensions:
    output, error = execute_command(f"wget {link}{ext}")

    if error:
        print(f"Error downloading NFDB fire polygons: {error}")
    else:
        print("NFDB fire polygons downloaded successfully.")
        print(f"Output: {output}")

myshapefile = gpd.read_file("perimeters.shp")
print("Reading NFDB fire polygons...")

# remove fires with Area < 200 ha (smaller than that are hard to see on the map)
print("Removing fires with Area < 200 ha...")
myshapefile = myshapefile[myshapefile['AREA'] >= 200]

myshapefile.to_file(str(parent) + json_dir + json_file, driver='GeoJSON')
print(f"NFDB fire polygons saved to {json_file}")
    
